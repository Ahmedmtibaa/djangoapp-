name: CI Docker Django

on:
  push:
    branches: ["**"]
    tags: ["*"]
  pull_request:

# avoid parallel runs stepping on each other
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/myapp

jobs:
  lint:
    name: Lint (flake8 + hadolint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install flake8
        run: pip install --no-cache-dir flake8

      - name: flake8
        run: flake8 .

      - name: hadolint Dockerfile
        run: |
          test -f Dockerfile || { echo "Dockerfile introuvable Ã  la racine"; exit 1; }
          docker run --rm -v "$PWD:/repo" hadolint/hadolint:latest hadolint /repo/Dockerfile

  build:
    name: Build image
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta (tags + labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=myapp
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      # Login is safe even on PR; token won't be exposed to forks
      - name: Login to Docker Hub
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build the image and load to local docker for Trivy scan
      - name: Build (load for scan)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Non-blocking scan: MEDIUM/HIGH/CRITICAL but do not fail the job
      - name: Trivy scan (report, non-blocking)
        uses: aquasecurity/trivy-action@0.24.0
        continue-on-error: true
        with:
          scan-type: image
          image-ref: ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          format: table
          severity: MEDIUM,HIGH,CRITICAL
          vuln-type: os,library
          ignore-unfixed: true
          exit-code: "0"  # never fail here

      # Blocking gate only for CRITICAL on main and tags
      - name: Trivy gate (CRITICAL blocks)
        if: ${{ github.ref_type == 'branch' && github.ref_name == 'main' || github.ref_type == 'tag' }}
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: image
          image-ref: ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          format: table
          severity: CRITICAL
          vuln-type: os,library
          ignore-unfixed: true
          exit-code: "1"  # fail if any CRITICAL

      # Push only on main and tags, and only if we could log in
      - name: Build & Push (main/tags only)
        if: ${{ (github.ref_type == 'branch' && github.ref_name == 'main' || github.ref_type == 'tag') && secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Optional job: show which tags were published
  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Print image info
        run: |
          echo "Image name: docker.io/${{ env.IMAGE_NAME }}"
          echo "Built from commit: ${{ github.sha }}"
